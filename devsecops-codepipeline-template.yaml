  AWSTemplateFormatVersion: "2010-09-09"
  Description:  >
    This template creates a CICD DevSecOps pipeline with AWS cloud native services and open source SAST and DAST tools, 
    sends vulnerability findings to AWS Security Hub, and includes security best practices.
    *Please note, you will be billed for the AWS resources used if you create a
    stack from this template.
    Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
    SPDX-License-Identifier: MIT-0
  Parameters:
    BranchName:
      Description: CodeCommit branch name
      Type: String
      Default: master
    RepositoryName:
      Description: CodeComit repository name
      Type: String 
    ApplicationName:
      Description: Elastic beanstalk application name
      Type: String
    ElasticBeanstalkEnvironment:
      Description: Elastic beanstalk environment name
      Type: String
    PRDApplicationName:
      Description: Elastic beanstalk application name
      Type: String
    PRDElasticBeanstalkEnvironment:
      Description: Elastic beanstalk environment name
      Type: String
    #SonarQubeScanToken:
     # Description: Sonarqube scanning token
      #Type: String
      #NoEcho: true
    #SonarQubeURLName:
      Description: SonarQube SAST tool URL
      Type: String
    LambdaPackageLoc:
      Description: S3 loc of lambda package
      Type: String
    LambdaPackageS3Key:
      Description: S3 Key for Lambda package object
      Type: String
      Default: import_findings_security_hub.zip
    LambdaHandlerName:
      Description: Name of the lambda handler
      Type: String
      Default: import_findings_security_hub.lambda_handler
    #SASTTool:
      Description: Select the SAST tool from the list
      Type: String
      AllowedValues: [SonarQube, PHPStan]
    DASTTool:
      Description: Select the DAST tool from the list
      Type: String
      AllowedValues: [OWASP-Zap]
    OwaspZapURLName:
      Description: OWASP Zap DAST Tool URL
      Type: String
    ApplicationURLForDASTScan:
      Description: Application URL to run the DAST/Pen testing 
      Type: String
    OwaspZapApiKey:
      Description: OWASP Zap ApiKey
      Type: String
      NoEcho: true
    PipelineNotificationsEmail:
      Description: Email address to receive SNS notifications for pipelineChanges
      Type: String
    PipelineApproverEmail:
      Description: Email address to send approval notifications
      Type: String

  #### Parameter Groups, Labels
  Metadata:
    'AWS::CloudFormation::Interface':
      ParameterGroups:
      - Label:
          default: Code
        Parameters:
        - BranchName
        - RepositoryName 
      #- Label:
      #    default: SAST
     #   Parameters:
        - SASTTool
        - SonarQubeScanToken
        - SonarQubeURLName
      - Label:
          default: DAST
        Parameters:
        - DASTTool
        - OwaspZapURLName
        - OwaspZapApiKey
        - ApplicationURLForDASTScan
      - Label:
          default: Lambda function 
        Parameters:
        - LambdaPackageLoc
        - LambdaPackageS3Key
        - LambdaHandlerName
      - Label:
          default: STG Elastic BeanStalk Environment 
        Parameters:
        - ElasticBeanstalkEnvironment
        - ApplicationName 
      - Label:
          default: PRD Elastic BeanStalk Environment 
        Parameters:
        - PRDElasticBeanstalkEnvironment
        - PRDApplicationName 
      - Label:
          default: General
        Parameters:
        - PipelineNotificationsEmail
        - PipelineApproverEmail

    ParameterLabels:
      BranchName:
          default: CodeCommit branch
      RepositoryName:
          default: CodeCommit repository
      #SASTTool:
       #   default: Select SAST tool
      #SonarQubeURLName:
        #  default: SonarQube URL name
      #SonarQubeScanToken:
       #   default: SonarQube API authentication token
      DASTTool:
          default: Select DAST tool
      OwaspZapURLName:
          default: OWASP Zap URL name
      OwaspZapApiKey:
          default: OWASP ZAP API authentication token
      ApplicationURLForDASTScan:
          default: STG Application web URL
      LambdaPackageLoc:
          default: S3 bucket name of lambda code
      LambdaPackageS3Key:
          default: S3 bucket folder of lambda code
      LambdaHandlerName:
          default: Lambda function handler name
      ElasticBeanstalkEnvironment:
          default: STG Elastic Beanstalk environment name 
      ApplicationName:
          default: STG Elastic beanstalk application name
      PRDElasticBeanstalkEnvironment:
          default: PRD Elastic Beanstalk environment name 
      PRDApplicationName:
          default: PRD Elastic beanstalk application name 
      PipelineNotificationsEmail:
          default: Email for pipeline notifications
      PipelineApproverEmai:
          default: Email for approval notifications

  Conditions:
    #ScanWith_SonarQube: !Equals [ !Ref SASTTool, "SonarQube" ]
    ScanWith_OWASP-ZAP: !Equals [ !Ref DASTTool, "OWASP-Zap" ]

  Resources:

    ### SSM ParameterStore entry to store sensitive information
    #SSMParameterForSonar:
     # Type: 'AWS::SSM::Parameter'
     # Condition: ScanWith_SonarQube
      #Properties:
       # Name: !Sub ${AWS::StackName}-Sonarqube-Token
        #Type: StringList 
       # Value: !Ref SonarQubeScanToken

    #SSMParameterSonarQubeURL:
     # Type: 'AWS::SSM::Parameter'
      #Condition: ScanWith_SonarQube
      #Properties:
       # Name: !Sub ${AWS::StackName}-SonarQubeURL
        #Type: StringList 
        #Value: !Ref SonarQubeURLName

    SSMParameterForZapApiKey:
      Type: 'AWS::SSM::Parameter'
      Properties:
        Name: !Sub ${AWS::StackName}-Zap-ApiKey
        Type: StringList 
        Value: !Ref OwaspZapApiKey

    SSMParameterOwaspZapURL:
      Type: 'AWS::SSM::Parameter'
      Properties:
        Name: !Sub ${AWS::StackName}-Owasp-Zap-URL
        Type: StringList 
        Value: !Ref OwaspZapURLName

    SSMParameterAppURL:
      Type: 'AWS::SSM::Parameter'
      Properties:
        Name: !Sub ${AWS::StackName}-Application-URL
        Type: StringList 
        Value: !Ref ApplicationURLForDASTScan

    ### CloudWatch LogGroup for storing pipeline logs
    CloudWatchLogGroup:
      Type: AWS::Logs::LogGroup
      Properties: 
        LogGroupName: !Sub ${AWS::StackName}-pipeline-logs
        RetentionInDays: 7

    

   

    #### Codepipeline creation 
    AppPipeline:
      Type: 'AWS::CodePipeline::Pipeline'
      Properties:
        Name: !Sub ${AWS::StackName}-pipeline
        RoleArn: !GetAtt 
          - PipelineServiceRole
          - Arn
        Stages:
          - Name: Source
            Actions:
              - Name: SourceAction
                ActionTypeId:
                  Category: Source # Valid categories "Source", "Build", "Test", "Deploy", "Invoke", and "Approval"
                  Owner: AWS  # 3 valid values - AWS, Thirdparty, and custom
                  Version: '1'
                  Provider: CodeCommit # Depends on the Ation Category, various Action Provider options are available. Refer to codepipeline CF template documentation.
                OutputArtifacts:
                  - Name: SourceOutput
                Configuration: # for each action provider, the configuration parameters differ. Refer to codepipeline structure reference documentation. https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#structure-configuration-examples
                  BranchName: !Ref BranchName
                  RepositoryName: !Ref RepositoryName
                  PollForSourceChanges: false
                RunOrder: 1
          

          ### CodeDeploy stage to deploy to Elastic Beanstalk
          - Name: Staging-Depoy-and-DAST-Analysis
            Actions:
              - Name: DeployStagingAction
                InputArtifacts:
                  - Name: SourceOutput
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: '1'
                  Provider: ElasticBeanstalk
                Configuration:
                  ApplicationName: !Ref ApplicationName
                  EnvironmentName: !Ref ElasticBeanstalkEnvironment
                RunOrder: 4
              - Name: DASTAnalysis
                InputArtifacts:
                  - Name: SourceOutput
                ActionTypeId:
                  Category: Test
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref DASTBuildProject
                RunOrder: 5

          ### Build stage for DAST analysis with OWASP Zap  
          - Name: Production-Depoy
            Actions:
              - Name: DeployProdAction
                InputArtifacts:
                  - Name: SourceOutput
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: '1'
                  Provider: ElasticBeanstalk
                Configuration:
                  ApplicationName: !Ref PRDApplicationName
                  EnvironmentName: !Ref PRDElasticBeanstalkEnvironment
                RunOrder: 6
        
        ### Store build artifacts in S3 bucket
        ArtifactStore:
          Type: S3
          Location: !Ref CodePipelineArtifactStoreBucket
          EncryptionKey: 
            Id: !GetAtt PipelineKMSKey.Arn
            Type: KMS
        Tags:
          - Key: pipeline-name
            Value: !Sub ${AWS::StackName}-pipeline  
                
    
    #### DAST analysis codebuild project
    DASTBuildProject:
      Type: AWS::CodeBuild::Project
      Properties:
        Description: Dynamic Code Analysis Build Project
        Artifacts:
          Type: CODEPIPELINE
        EncryptionKey: !GetAtt PipelineKMSKey.Arn
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:4.0
          Type: LINUX_CONTAINER
          PrivilegedMode: true
          EnvironmentVariables:   ## adding environment variable from SSM parameter
              - Name: OwaspZapApiKey
                Type: PARAMETER_STORE
                Value: !Ref SSMParameterForZapApiKey
              - Name: OwaspZapURL
                Type: PARAMETER_STORE
                Value: !Ref SSMParameterOwaspZapURL
              - Name: ApplicationURL
                Type: PARAMETER_STORE
                Value: !Ref SSMParameterAppURL
        ServiceRole: !Ref 'StaticCodeAnalysisServiceRole'
        Source:
          Type: CODEPIPELINE
          BuildSpec: 
            Fn::If:
              - ScanWith_OWASP-ZAP ### If selected SAST tool is SonarQube it will load buildspec_SonarQube.yml if not, it will load buildspec_phpstan.yml
              - buildspec-owasp-zap.yml
              - buildspec-qualys.yml
        LogsConfig:
            CloudWatchLogs:
              GroupName: !Ref CloudWatchLogGroup
              Status: ENABLED
              StreamName: DASTAnalysis
        QueuedTimeoutInMinutes: 10
        Tags:
          - Key: pipeline-name
            Value: !Sub ${AWS::StackName}-pipeline       
        

   

    #### Lambda Function Execution Role
    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${AWS::StackName}-LambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: "/"
        Policies:
          - PolicyName: lambda-execution-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:*
                    - S3:*
                    - securityhub:*
                  Resource: '*'
    
    ### Pipeline ServicRole
    PipelineServiceRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - codepipeline.amazonaws.com
              Action: 'sts:AssumeRole'
        Path: /
        Policies:
          - PolicyName: !Sub ${AWS::StackName}-CodePipeline-Servicepolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - 'codecommit:CancelUploadArchive'
                    - 'codecommit:GetBranch'
                    - 'codecommit:GetCommit'
                    - 'codecommit:GetUploadArchiveStatus'
                    - 'codecommit:UploadArchive'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'codedeploy:CreateDeployment'
                    - 'codedeploy:GetApplicationRevision'
                    - 'codedeploy:GetDeployment'
                    - 'codedeploy:GetDeploymentConfig'
                    - 'codedeploy:RegisterApplicationRevision'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'codebuild:BatchGetBuilds'
                    - 'codebuild:StartBuild'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'devicefarm:ListProjects'
                    - 'devicefarm:ListDevicePools'
                    - 'devicefarm:GetRun'
                    - 'devicefarm:GetUpload'
                    - 'devicefarm:CreateUpload'
                    - 'devicefarm:ScheduleRun'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'lambda:InvokeFunction'
                    - 'lambda:ListFunctions'
                    - 'lambda:CreateFunction'
                    - 'lambda:UpdateFunctionConfiguration'
                    - 'lambda:UpdateFunctionCode'
                    - 'lambda:TagResource'
                    - 'lambda:PublishVersion'
                    - 'lambda:GetFunctionConfiguration'
                    - 'lambda:GetFunction'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'iam:PassRole'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'elasticbeanstalk:*'
                    - 'ec2:*'
                    - 'elasticloadbalancing:*'
                    - 'autoscaling:*'
                    - 'cloudwatch:*'
                    - 's3:*'
                    - 'sns:*'
                    - 'cloudformation:*'
                    - 'rds:*'
                    - 'sqs:*'
                    - 'ecs:*'
                    - 'logs:*'
                    - 'kms:*'
                    - 'ecr:*'
                  Resource: '*'
  
  ###Outputs
  Outputs:
    ArtifactBucketName:
      Description: The s3 bucket name of the artifact repository with GetAtt function
      Value: !GetAtt CodePipelineArtifactStoreBucket.Arn

    ArtifactBucketNameRef:
      Description: S3 bucketname with Ref function
      Value: !Ref CodePipelineArtifactStoreBucket

    LambdaFunctionArn:
      Description: LambdaFunction Arn value
      Value: !GetAtt LambdaFunSecurityHubImport.Arn

    CloudWatchLogGroupName:
      Description: Cloudwatch Log group name
      Value: !Ref CloudWatchLogGroup

    PipelineKeyArn:
      Description: KMS Key ARN for the pipeline
      Value: !GetAtt PipelineKMSKey.Arn

    

    
